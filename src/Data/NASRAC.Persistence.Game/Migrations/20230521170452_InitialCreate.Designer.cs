// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NASRAC.Persistence.Game.DAL;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NASRAC.Persistence.Game.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230521170452_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("NASRAC.Models.Game.DriverEntities.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<double>("DNFOdds")
                        .HasColumnType("double precision");

                    b.Property<double>("IntermediateTrackRating")
                        .HasColumnType("double precision");

                    b.Property<int>("Marketability")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("OverallRating")
                        .HasColumnType("double precision");

                    b.Property<int>("PeakAgeEnd")
                        .HasColumnType("integer");

                    b.Property<int>("PeakAgeStart")
                        .HasColumnType("integer");

                    b.Property<double>("PerformanceRating")
                        .HasColumnType("double precision");

                    b.Property<double>("PotentialRating")
                        .HasColumnType("double precision");

                    b.Property<double>("ProgressionRate")
                        .HasColumnType("double precision");

                    b.Property<double>("RegressionRate")
                        .HasColumnType("double precision");

                    b.Property<double>("RetirementFactor")
                        .HasColumnType("double precision");

                    b.Property<double>("RoadTrackRating")
                        .HasColumnType("double precision");

                    b.Property<double>("ShortTrackRating")
                        .HasColumnType("double precision");

                    b.Property<double>("SuperspeedwayTrackRating")
                        .HasColumnType("double precision");

                    b.Property<int?>("TeamId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Driver");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 45,
                            DNFOdds = 0.002,
                            IntermediateTrackRating = 55.274999999999999,
                            Marketability = 6,
                            Name = "Valentina Bednar",
                            OverallRating = 51.319000000000003,
                            PeakAgeEnd = 39,
                            PeakAgeStart = 31,
                            PerformanceRating = 0.0,
                            PotentialRating = 90.111999999999995,
                            ProgressionRate = 0.068000000000000005,
                            RegressionRate = 0.021000000000000001,
                            RetirementFactor = 0.001,
                            RoadTrackRating = 50.0,
                            ShortTrackRating = 50.0,
                            SuperspeedwayTrackRating = 50.0
                        },
                        new
                        {
                            Id = 2,
                            Age = 28,
                            DNFOdds = 0.002,
                            IntermediateTrackRating = 56.171999999999997,
                            Marketability = 6,
                            Name = "Rosalind Connelly",
                            OverallRating = 52.719999999999999,
                            PeakAgeEnd = 37,
                            PeakAgeStart = 34,
                            PerformanceRating = 0.0,
                            PotentialRating = 54.795999999999999,
                            ProgressionRate = 0.021000000000000001,
                            RegressionRate = 0.0050000000000000001,
                            RetirementFactor = 0.0,
                            RoadTrackRating = 50.539000000000001,
                            ShortTrackRating = 50.0,
                            SuperspeedwayTrackRating = 54.167999999999999
                        },
                        new
                        {
                            Id = 3,
                            Age = 42,
                            DNFOdds = 0.0040000000000000001,
                            IntermediateTrackRating = 78.025000000000006,
                            Marketability = 4,
                            Name = "Keira Kihn",
                            OverallRating = 81.189999999999998,
                            PeakAgeEnd = 28,
                            PeakAgeStart = 27,
                            PerformanceRating = 0.0,
                            PotentialRating = 92.335999999999999,
                            ProgressionRate = 0.049000000000000002,
                            RegressionRate = 0.032000000000000001,
                            RetirementFactor = 0.0,
                            RoadTrackRating = 67.936000000000007,
                            ShortTrackRating = 97.111999999999995,
                            SuperspeedwayTrackRating = 81.686000000000007
                        },
                        new
                        {
                            Id = 4,
                            Age = 39,
                            DNFOdds = 0.001,
                            IntermediateTrackRating = 64.933000000000007,
                            Marketability = 9,
                            Name = "Sterling Olson",
                            OverallRating = 75.736000000000004,
                            PeakAgeEnd = 38,
                            PeakAgeStart = 34,
                            PerformanceRating = 0.0,
                            PotentialRating = 91.158000000000001,
                            ProgressionRate = 0.039,
                            RegressionRate = 0.014,
                            RetirementFactor = 0.0040000000000000001,
                            RoadTrackRating = 74.113,
                            ShortTrackRating = 64.372,
                            SuperspeedwayTrackRating = 99.527000000000001
                        },
                        new
                        {
                            Id = 5,
                            Age = 34,
                            DNFOdds = 0.002,
                            IntermediateTrackRating = 95.536000000000001,
                            Marketability = 2,
                            Name = "Addie Ward",
                            OverallRating = 70.513999999999996,
                            PeakAgeEnd = 39,
                            PeakAgeStart = 35,
                            PerformanceRating = 0.0,
                            PotentialRating = 100.0,
                            ProgressionRate = 0.049000000000000002,
                            RegressionRate = 0.012999999999999999,
                            RetirementFactor = 0.001,
                            RoadTrackRating = 50.0,
                            ShortTrackRating = 56.456000000000003,
                            SuperspeedwayTrackRating = 80.063000000000002
                        },
                        new
                        {
                            Id = 6,
                            Age = 24,
                            DNFOdds = 0.001,
                            IntermediateTrackRating = 70.043000000000006,
                            Marketability = 9,
                            Name = "Lavada Weimann",
                            OverallRating = 71.619,
                            PeakAgeEnd = 39,
                            PeakAgeStart = 30,
                            PerformanceRating = 0.0,
                            PotentialRating = 86.230999999999995,
                            ProgressionRate = 0.078,
                            RegressionRate = 0.014999999999999999,
                            RetirementFactor = 0.0,
                            RoadTrackRating = 66.311000000000007,
                            ShortTrackRating = 66.123000000000005,
                            SuperspeedwayTrackRating = 83.997
                        },
                        new
                        {
                            Id = 7,
                            Age = 29,
                            DNFOdds = 0.0040000000000000001,
                            IntermediateTrackRating = 56.802,
                            Marketability = 1,
                            Name = "Hilton Robel",
                            OverallRating = 63.481999999999999,
                            PeakAgeEnd = 31,
                            PeakAgeStart = 30,
                            PerformanceRating = 0.0,
                            PotentialRating = 100.0,
                            ProgressionRate = 0.069000000000000006,
                            RegressionRate = 0.050999999999999997,
                            RetirementFactor = 0.001,
                            RoadTrackRating = 56.054000000000002,
                            ShortTrackRating = 72.623000000000005,
                            SuperspeedwayTrackRating = 68.447000000000003
                        },
                        new
                        {
                            Id = 8,
                            Age = 27,
                            DNFOdds = 0.0030000000000000001,
                            IntermediateTrackRating = 100.0,
                            Marketability = 1,
                            Name = "Loma Bahringer",
                            OverallRating = 93.391999999999996,
                            PeakAgeEnd = 36,
                            PeakAgeStart = 35,
                            PerformanceRating = 0.0,
                            PotentialRating = 100.0,
                            ProgressionRate = 0.0060000000000000001,
                            RegressionRate = 0.002,
                            RetirementFactor = 0.0030000000000000001,
                            RoadTrackRating = 97.932000000000002,
                            ShortTrackRating = 80.194000000000003,
                            SuperspeedwayTrackRating = 95.441999999999993
                        },
                        new
                        {
                            Id = 9,
                            Age = 33,
                            DNFOdds = 0.0050000000000000001,
                            IntermediateTrackRating = 65.033000000000001,
                            Marketability = 7,
                            Name = "Joshua Renner",
                            OverallRating = 65.114000000000004,
                            PeakAgeEnd = 36,
                            PeakAgeStart = 27,
                            PerformanceRating = 0.0,
                            PotentialRating = 88.891000000000005,
                            ProgressionRate = 0.042000000000000003,
                            RegressionRate = 0.029000000000000001,
                            RetirementFactor = 0.0,
                            RoadTrackRating = 65.731999999999999,
                            ShortTrackRating = 68.296000000000006,
                            SuperspeedwayTrackRating = 61.395000000000003
                        },
                        new
                        {
                            Id = 10,
                            Age = 22,
                            DNFOdds = 0.001,
                            IntermediateTrackRating = 67.638000000000005,
                            Marketability = 2,
                            Name = "Ulises Wolff",
                            OverallRating = 63.026000000000003,
                            PeakAgeEnd = 36,
                            PeakAgeStart = 27,
                            PerformanceRating = 0.0,
                            PotentialRating = 100.0,
                            ProgressionRate = 0.074999999999999997,
                            RegressionRate = 0.012999999999999999,
                            RetirementFactor = 0.0040000000000000001,
                            RoadTrackRating = 50.0,
                            ShortTrackRating = 72.896000000000001,
                            SuperspeedwayTrackRating = 61.570999999999998
                        },
                        new
                        {
                            Id = 11,
                            Age = 34,
                            DNFOdds = 0.0050000000000000001,
                            IntermediateTrackRating = 91.233999999999995,
                            Marketability = 9,
                            Name = "Samir Miller",
                            OverallRating = 83.478999999999999,
                            PeakAgeEnd = 40,
                            PeakAgeStart = 37,
                            PerformanceRating = 0.0,
                            PotentialRating = 100.0,
                            ProgressionRate = 0.078,
                            RegressionRate = 0.0070000000000000001,
                            RetirementFactor = 0.002,
                            RoadTrackRating = 97.492999999999995,
                            ShortTrackRating = 66.713999999999999,
                            SuperspeedwayTrackRating = 78.475999999999999
                        },
                        new
                        {
                            Id = 12,
                            Age = 24,
                            DNFOdds = 0.001,
                            IntermediateTrackRating = 81.802000000000007,
                            Marketability = 10,
                            Name = "Greg Zboncak",
                            OverallRating = 81.030000000000001,
                            PeakAgeEnd = 37,
                            PeakAgeStart = 35,
                            PerformanceRating = 0.0,
                            PotentialRating = 100.0,
                            ProgressionRate = 0.012999999999999999,
                            RegressionRate = 0.002,
                            RetirementFactor = 0.0050000000000000001,
                            RoadTrackRating = 73.835999999999999,
                            ShortTrackRating = 93.688000000000002,
                            SuperspeedwayTrackRating = 74.793000000000006
                        },
                        new
                        {
                            Id = 13,
                            Age = 29,
                            DNFOdds = 0.0,
                            IntermediateTrackRating = 83.881,
                            Marketability = 2,
                            Name = "Valentina Hoeger",
                            OverallRating = 85.677999999999997,
                            PeakAgeEnd = 27,
                            PeakAgeStart = 27,
                            PerformanceRating = 0.0,
                            PotentialRating = 91.200999999999993,
                            ProgressionRate = 0.066000000000000003,
                            RegressionRate = 0.051999999999999998,
                            RetirementFactor = 0.0050000000000000001,
                            RoadTrackRating = 97.046000000000006,
                            ShortTrackRating = 81.590999999999994,
                            SuperspeedwayTrackRating = 80.192999999999998
                        },
                        new
                        {
                            Id = 14,
                            Age = 21,
                            DNFOdds = 0.0050000000000000001,
                            IntermediateTrackRating = 50.0,
                            Marketability = 8,
                            Name = "Jamel Powlowski",
                            OverallRating = 50.0,
                            PeakAgeEnd = 32,
                            PeakAgeStart = 31,
                            PerformanceRating = 0.0,
                            PotentialRating = 66.174000000000007,
                            ProgressionRate = 0.050000000000000003,
                            RegressionRate = 0.042999999999999997,
                            RetirementFactor = 0.002,
                            RoadTrackRating = 50.0,
                            ShortTrackRating = 50.0,
                            SuperspeedwayTrackRating = 50.0
                        },
                        new
                        {
                            Id = 15,
                            Age = 26,
                            DNFOdds = 0.0,
                            IntermediateTrackRating = 50.0,
                            Marketability = 1,
                            Name = "Kamille Schmitt",
                            OverallRating = 50.311,
                            PeakAgeEnd = 36,
                            PeakAgeStart = 35,
                            PerformanceRating = 0.0,
                            PotentialRating = 55.055999999999997,
                            ProgressionRate = 0.089999999999999997,
                            RegressionRate = 0.032000000000000001,
                            RetirementFactor = 0.0,
                            RoadTrackRating = 50.0,
                            ShortTrackRating = 50.0,
                            SuperspeedwayTrackRating = 51.243000000000002
                        },
                        new
                        {
                            Id = 16,
                            Age = 34,
                            DNFOdds = 0.002,
                            IntermediateTrackRating = 85.406000000000006,
                            Marketability = 9,
                            Name = "Destini Crona",
                            OverallRating = 86.691000000000003,
                            PeakAgeEnd = 39,
                            PeakAgeStart = 34,
                            PerformanceRating = 0.0,
                            PotentialRating = 96.609999999999999,
                            ProgressionRate = 0.051999999999999998,
                            RegressionRate = 0.044999999999999998,
                            RetirementFactor = 0.002,
                            RoadTrackRating = 82.915999999999997,
                            ShortTrackRating = 87.403000000000006,
                            SuperspeedwayTrackRating = 91.039000000000001
                        },
                        new
                        {
                            Id = 17,
                            Age = 32,
                            DNFOdds = 0.0030000000000000001,
                            IntermediateTrackRating = 93.197000000000003,
                            Marketability = 1,
                            Name = "Janessa Mitchell",
                            OverallRating = 95.280000000000001,
                            PeakAgeEnd = 39,
                            PeakAgeStart = 32,
                            PerformanceRating = 0.0,
                            PotentialRating = 94.716999999999999,
                            ProgressionRate = 0.080000000000000002,
                            RegressionRate = 0.016,
                            RetirementFactor = 0.002,
                            RoadTrackRating = 99.204999999999998,
                            ShortTrackRating = 100.0,
                            SuperspeedwayTrackRating = 88.718999999999994
                        },
                        new
                        {
                            Id = 18,
                            Age = 45,
                            DNFOdds = 0.0030000000000000001,
                            IntermediateTrackRating = 100.0,
                            Marketability = 10,
                            Name = "Gage Pollich",
                            OverallRating = 93.956999999999994,
                            PeakAgeEnd = 37,
                            PeakAgeStart = 31,
                            PerformanceRating = 0.0,
                            PotentialRating = 100.0,
                            ProgressionRate = 0.035000000000000003,
                            RegressionRate = 0.001,
                            RetirementFactor = 0.002,
                            RoadTrackRating = 86.671000000000006,
                            ShortTrackRating = 100.0,
                            SuperspeedwayTrackRating = 89.156999999999996
                        },
                        new
                        {
                            Id = 19,
                            Age = 31,
                            DNFOdds = 0.002,
                            IntermediateTrackRating = 72.078999999999994,
                            Marketability = 2,
                            Name = "Amalia Swaniawski",
                            OverallRating = 64.135999999999996,
                            PeakAgeEnd = 32,
                            PeakAgeStart = 32,
                            PerformanceRating = 0.0,
                            PotentialRating = 79.793000000000006,
                            ProgressionRate = 0.094,
                            RegressionRate = 0.010999999999999999,
                            RetirementFactor = 0.0040000000000000001,
                            RoadTrackRating = 60.771000000000001,
                            ShortTrackRating = 73.694000000000003,
                            SuperspeedwayTrackRating = 50.0
                        },
                        new
                        {
                            Id = 20,
                            Age = 25,
                            DNFOdds = 0.0050000000000000001,
                            IntermediateTrackRating = 78.394000000000005,
                            Marketability = 4,
                            Name = "Scotty O'Connell",
                            OverallRating = 88.989000000000004,
                            PeakAgeEnd = 39,
                            PeakAgeStart = 28,
                            PerformanceRating = 0.0,
                            PotentialRating = 100.0,
                            ProgressionRate = 0.042999999999999997,
                            RegressionRate = 0.014,
                            RetirementFactor = 0.001,
                            RoadTrackRating = 93.022000000000006,
                            ShortTrackRating = 92.540000000000006,
                            SuperspeedwayTrackRating = 91.998999999999995
                        },
                        new
                        {
                            Id = 21,
                            Age = 28,
                            DNFOdds = 0.0040000000000000001,
                            IntermediateTrackRating = 50.0,
                            Marketability = 7,
                            Name = "Cleta Muller",
                            OverallRating = 50.0,
                            PeakAgeEnd = 38,
                            PeakAgeStart = 32,
                            PerformanceRating = 0.0,
                            PotentialRating = 34.079000000000001,
                            ProgressionRate = 0.082000000000000003,
                            RegressionRate = 0.069000000000000006,
                            RetirementFactor = 0.002,
                            RoadTrackRating = 50.0,
                            ShortTrackRating = 50.0,
                            SuperspeedwayTrackRating = 50.0
                        },
                        new
                        {
                            Id = 22,
                            Age = 26,
                            DNFOdds = 0.001,
                            IntermediateTrackRating = 87.316000000000003,
                            Marketability = 2,
                            Name = "Norwood Thompson",
                            OverallRating = 77.152000000000001,
                            PeakAgeEnd = 32,
                            PeakAgeStart = 32,
                            PerformanceRating = 0.0,
                            PotentialRating = 100.0,
                            ProgressionRate = 0.085999999999999993,
                            RegressionRate = 0.0030000000000000001,
                            RetirementFactor = 0.0,
                            RoadTrackRating = 73.965999999999994,
                            ShortTrackRating = 77.507999999999996,
                            SuperspeedwayTrackRating = 69.817999999999998
                        },
                        new
                        {
                            Id = 23,
                            Age = 28,
                            DNFOdds = 0.0050000000000000001,
                            IntermediateTrackRating = 50.0,
                            Marketability = 6,
                            Name = "Olin McDermott",
                            OverallRating = 50.0,
                            PeakAgeEnd = 40,
                            PeakAgeStart = 36,
                            PerformanceRating = 0.0,
                            PotentialRating = 54.091999999999999,
                            ProgressionRate = 0.012,
                            RegressionRate = 0.0,
                            RetirementFactor = 0.001,
                            RoadTrackRating = 50.0,
                            ShortTrackRating = 50.0,
                            SuperspeedwayTrackRating = 50.0
                        },
                        new
                        {
                            Id = 24,
                            Age = 30,
                            DNFOdds = 0.001,
                            IntermediateTrackRating = 50.0,
                            Marketability = 5,
                            Name = "Madelyn Metz",
                            OverallRating = 50.0,
                            PeakAgeEnd = 31,
                            PeakAgeStart = 31,
                            PerformanceRating = 0.0,
                            PotentialRating = 42.067999999999998,
                            ProgressionRate = 0.084000000000000005,
                            RegressionRate = 0.017999999999999999,
                            RetirementFactor = 0.0040000000000000001,
                            RoadTrackRating = 50.0,
                            ShortTrackRating = 50.0,
                            SuperspeedwayTrackRating = 50.0
                        },
                        new
                        {
                            Id = 25,
                            Age = 27,
                            DNFOdds = 0.002,
                            IntermediateTrackRating = 63.798999999999999,
                            Marketability = 8,
                            Name = "Andrew Treutel",
                            OverallRating = 57.414000000000001,
                            PeakAgeEnd = 38,
                            PeakAgeStart = 33,
                            PerformanceRating = 0.0,
                            PotentialRating = 72.352000000000004,
                            ProgressionRate = 0.042000000000000003,
                            RegressionRate = 0.019,
                            RetirementFactor = 0.0,
                            RoadTrackRating = 50.0,
                            ShortTrackRating = 65.858000000000004,
                            SuperspeedwayTrackRating = 50.0
                        },
                        new
                        {
                            Id = 26,
                            Age = 34,
                            DNFOdds = 0.0040000000000000001,
                            IntermediateTrackRating = 61.941000000000003,
                            Marketability = 6,
                            Name = "Sven Spinka",
                            OverallRating = 63.566000000000003,
                            PeakAgeEnd = 39,
                            PeakAgeStart = 35,
                            PerformanceRating = 0.0,
                            PotentialRating = 65.325000000000003,
                            ProgressionRate = 0.012999999999999999,
                            RegressionRate = 0.01,
                            RetirementFactor = 0.002,
                            RoadTrackRating = 64.182000000000002,
                            ShortTrackRating = 62.997,
                            SuperspeedwayTrackRating = 65.141999999999996
                        },
                        new
                        {
                            Id = 27,
                            Age = 34,
                            DNFOdds = 0.0040000000000000001,
                            IntermediateTrackRating = 70.349000000000004,
                            Marketability = 9,
                            Name = "Verna Auer",
                            OverallRating = 64.540999999999997,
                            PeakAgeEnd = 38,
                            PeakAgeStart = 34,
                            PerformanceRating = 0.0,
                            PotentialRating = 80.903000000000006,
                            ProgressionRate = 0.002,
                            RegressionRate = 0.001,
                            RetirementFactor = 0.0040000000000000001,
                            RoadTrackRating = 61.923000000000002,
                            ShortTrackRating = 60.822000000000003,
                            SuperspeedwayTrackRating = 65.070999999999998
                        },
                        new
                        {
                            Id = 28,
                            Age = 37,
                            DNFOdds = 0.002,
                            IntermediateTrackRating = 89.816000000000003,
                            Marketability = 9,
                            Name = "Maiya Grimes",
                            OverallRating = 88.340999999999994,
                            PeakAgeEnd = 32,
                            PeakAgeStart = 31,
                            PerformanceRating = 0.0,
                            PotentialRating = 84.936999999999998,
                            ProgressionRate = 0.014,
                            RegressionRate = 0.001,
                            RetirementFactor = 0.001,
                            RoadTrackRating = 96.781999999999996,
                            ShortTrackRating = 81.361999999999995,
                            SuperspeedwayTrackRating = 85.405000000000001
                        },
                        new
                        {
                            Id = 29,
                            Age = 32,
                            DNFOdds = 0.001,
                            IntermediateTrackRating = 66.609999999999999,
                            Marketability = 6,
                            Name = "Harrison Sporer",
                            OverallRating = 70.319999999999993,
                            PeakAgeEnd = 38,
                            PeakAgeStart = 31,
                            PerformanceRating = 0.0,
                            PotentialRating = 91.611000000000004,
                            ProgressionRate = 0.089999999999999997,
                            RegressionRate = 0.048000000000000001,
                            RetirementFactor = 0.0030000000000000001,
                            RoadTrackRating = 71.215999999999994,
                            ShortTrackRating = 78.682000000000002,
                            SuperspeedwayTrackRating = 64.769999999999996
                        },
                        new
                        {
                            Id = 30,
                            Age = 21,
                            DNFOdds = 0.0050000000000000001,
                            IntermediateTrackRating = 82.721000000000004,
                            Marketability = 9,
                            Name = "Suzanne Stroman",
                            OverallRating = 77.950999999999993,
                            PeakAgeEnd = 30,
                            PeakAgeStart = 29,
                            PerformanceRating = 0.0,
                            PotentialRating = 81.197999999999993,
                            ProgressionRate = 0.099000000000000005,
                            RegressionRate = 0.012999999999999999,
                            RetirementFactor = 0.0040000000000000001,
                            RoadTrackRating = 79.048000000000002,
                            ShortTrackRating = 72.778999999999996,
                            SuperspeedwayTrackRating = 77.254999999999995
                        },
                        new
                        {
                            Id = 31,
                            Age = 24,
                            DNFOdds = 0.001,
                            IntermediateTrackRating = 55.700000000000003,
                            Marketability = 10,
                            Name = "Dayne Wisozk",
                            OverallRating = 53.305,
                            PeakAgeEnd = 36,
                            PeakAgeStart = 33,
                            PerformanceRating = 0.0,
                            PotentialRating = 80.010999999999996,
                            ProgressionRate = 0.012999999999999999,
                            RegressionRate = 0.0070000000000000001,
                            RetirementFactor = 0.002,
                            RoadTrackRating = 50.0,
                            ShortTrackRating = 55.341000000000001,
                            SuperspeedwayTrackRating = 52.18
                        },
                        new
                        {
                            Id = 32,
                            Age = 33,
                            DNFOdds = 0.0030000000000000001,
                            IntermediateTrackRating = 50.0,
                            Marketability = 10,
                            Name = "Sterling Pouros",
                            OverallRating = 50.073999999999998,
                            PeakAgeEnd = 37,
                            PeakAgeStart = 33,
                            PerformanceRating = 0.0,
                            PotentialRating = 76.519000000000005,
                            ProgressionRate = 0.012999999999999999,
                            RegressionRate = 0.01,
                            RetirementFactor = 0.001,
                            RoadTrackRating = 50.0,
                            ShortTrackRating = 50.296999999999997,
                            SuperspeedwayTrackRating = 50.0
                        },
                        new
                        {
                            Id = 33,
                            Age = 19,
                            DNFOdds = 0.002,
                            IntermediateTrackRating = 90.5,
                            Marketability = 5,
                            Name = "Chanelle Schneider",
                            OverallRating = 64.432000000000002,
                            PeakAgeEnd = 33,
                            PeakAgeStart = 27,
                            PerformanceRating = 0.0,
                            PotentialRating = 86.766999999999996,
                            ProgressionRate = 0.014999999999999999,
                            RegressionRate = 0.002,
                            RetirementFactor = 0.0,
                            RoadTrackRating = 50.0,
                            ShortTrackRating = 67.227000000000004,
                            SuperspeedwayTrackRating = 50.0
                        },
                        new
                        {
                            Id = 34,
                            Age = 30,
                            DNFOdds = 0.0030000000000000001,
                            IntermediateTrackRating = 88.555999999999997,
                            Marketability = 3,
                            Name = "Shemar Schultz",
                            OverallRating = 87.769999999999996,
                            PeakAgeEnd = 35,
                            PeakAgeStart = 27,
                            PerformanceRating = 0.0,
                            PotentialRating = 99.457999999999998,
                            ProgressionRate = 0.056000000000000001,
                            RegressionRate = 0.025999999999999999,
                            RetirementFactor = 0.0,
                            RoadTrackRating = 98.378,
                            ShortTrackRating = 80.771000000000001,
                            SuperspeedwayTrackRating = 83.376999999999995
                        },
                        new
                        {
                            Id = 35,
                            Age = 18,
                            DNFOdds = 0.002,
                            IntermediateTrackRating = 89.451999999999998,
                            Marketability = 2,
                            Name = "Kareem Zieme",
                            OverallRating = 82.817999999999998,
                            PeakAgeEnd = 34,
                            PeakAgeStart = 31,
                            PerformanceRating = 0.0,
                            PotentialRating = 94.203999999999994,
                            ProgressionRate = 0.055,
                            RegressionRate = 0.032000000000000001,
                            RetirementFactor = 0.0,
                            RoadTrackRating = 74.468999999999994,
                            ShortTrackRating = 91.471999999999994,
                            SuperspeedwayTrackRating = 75.881
                        },
                        new
                        {
                            Id = 36,
                            Age = 27,
                            DNFOdds = 0.0030000000000000001,
                            IntermediateTrackRating = 52.073,
                            Marketability = 1,
                            Name = "Candace Kautzer",
                            OverallRating = 55.302999999999997,
                            PeakAgeEnd = 33,
                            PeakAgeStart = 33,
                            PerformanceRating = 0.0,
                            PotentialRating = 58.097999999999999,
                            ProgressionRate = 0.0089999999999999993,
                            RegressionRate = 0.0050000000000000001,
                            RetirementFactor = 0.002,
                            RoadTrackRating = 56.802999999999997,
                            ShortTrackRating = 55.615000000000002,
                            SuperspeedwayTrackRating = 56.719999999999999
                        },
                        new
                        {
                            Id = 37,
                            Age = 29,
                            DNFOdds = 0.0050000000000000001,
                            IntermediateTrackRating = 91.106999999999999,
                            Marketability = 6,
                            Name = "Whitney Keeling",
                            OverallRating = 85.649000000000001,
                            PeakAgeEnd = 40,
                            PeakAgeStart = 37,
                            PerformanceRating = 0.0,
                            PotentialRating = 93.228999999999999,
                            ProgressionRate = 0.069000000000000006,
                            RegressionRate = 0.0030000000000000001,
                            RetirementFactor = 0.0030000000000000001,
                            RoadTrackRating = 77.111000000000004,
                            ShortTrackRating = 83.825999999999993,
                            SuperspeedwayTrackRating = 90.554000000000002
                        },
                        new
                        {
                            Id = 38,
                            Age = 20,
                            DNFOdds = 0.002,
                            IntermediateTrackRating = 50.0,
                            Marketability = 4,
                            Name = "Gideon Armstrong",
                            OverallRating = 50.0,
                            PeakAgeEnd = 33,
                            PeakAgeStart = 29,
                            PerformanceRating = 0.0,
                            PotentialRating = 46.110999999999997,
                            ProgressionRate = 0.094,
                            RegressionRate = 0.070999999999999994,
                            RetirementFactor = 0.0050000000000000001,
                            RoadTrackRating = 50.0,
                            ShortTrackRating = 50.0,
                            SuperspeedwayTrackRating = 50.0
                        },
                        new
                        {
                            Id = 39,
                            Age = 38,
                            DNFOdds = 0.0,
                            IntermediateTrackRating = 75.340000000000003,
                            Marketability = 4,
                            Name = "Tavares O'Connell",
                            OverallRating = 70.561000000000007,
                            PeakAgeEnd = 35,
                            PeakAgeStart = 27,
                            PerformanceRating = 0.0,
                            PotentialRating = 100.0,
                            ProgressionRate = 0.027,
                            RegressionRate = 0.014999999999999999,
                            RetirementFactor = 0.0050000000000000001,
                            RoadTrackRating = 73.272000000000006,
                            ShortTrackRating = 64.924999999999997,
                            SuperspeedwayTrackRating = 68.706000000000003
                        },
                        new
                        {
                            Id = 40,
                            Age = 25,
                            DNFOdds = 0.0050000000000000001,
                            IntermediateTrackRating = 61.113,
                            Marketability = 2,
                            Name = "Claudia Runte",
                            OverallRating = 62.179000000000002,
                            PeakAgeEnd = 40,
                            PeakAgeStart = 33,
                            PerformanceRating = 0.0,
                            PotentialRating = 83.641999999999996,
                            ProgressionRate = 0.059999999999999998,
                            RegressionRate = 0.050000000000000003,
                            RetirementFactor = 0.0030000000000000001,
                            RoadTrackRating = 62.597000000000001,
                            ShortTrackRating = 53.975999999999999,
                            SuperspeedwayTrackRating = 71.031000000000006
                        });
                });

            modelBuilder.Entity("NASRAC.Models.Game.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("integer");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("TeamId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("NASRAC.Models.Game.Entities.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BorrowerId")
                        .HasColumnType("integer");

                    b.Property<double>("InterestRate")
                        .HasColumnType("double precision");

                    b.Property<int>("LenderId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("MaturityDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("TotalAmountLoaned")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalAmountPaid")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("BorrowerId");

                    b.HasIndex("LenderId");

                    b.ToTable("Loan");
                });

            modelBuilder.Entity("NASRAC.Models.Game.Entities.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VehicleType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Manufacturer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chevy",
                            VehicleType = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chevy",
                            VehicleType = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ford",
                            VehicleType = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ford",
                            VehicleType = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Toyota",
                            VehicleType = 0
                        },
                        new
                        {
                            Id = 6,
                            Name = "Toyota",
                            VehicleType = 1
                        });
                });

            modelBuilder.Entity("NASRAC.Models.Game.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("RaceId")
                        .HasColumnType("integer");

                    b.Property<int>("RaceNumber")
                        .HasColumnType("integer");

                    b.Property<int>("SeasonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RaceId");

                    b.ToTable("Schedule");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateOnly(2022, 2, 6),
                            RaceId = 1,
                            RaceNumber = 1,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateOnly(2022, 2, 17),
                            RaceId = 2,
                            RaceNumber = 2,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateOnly(2022, 2, 17),
                            RaceId = 3,
                            RaceNumber = 3,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateOnly(2022, 2, 20),
                            RaceId = 4,
                            RaceNumber = 4,
                            SeasonId = 1
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateOnly(2022, 2, 27),
                            RaceId = 5,
                            RaceNumber = 5,
                            SeasonId = 1
                        });
                });

            modelBuilder.Entity("NASRAC.Models.Game.Entities.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Tier")
                        .HasColumnType("integer");

                    b.Property<int>("VehicleType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Series");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "NASRAC Cup Series",
                            Tier = 1,
                            VehicleType = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "NASRAC Bowl Series",
                            Tier = 2,
                            VehicleType = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "NASRAC Truck Series",
                            Tier = 3,
                            VehicleType = 1
                        });
                });

            modelBuilder.Entity("NASRAC.Models.Game.Entities.Sponsor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Budget")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PrestigeLevel")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Sponsor");
                });

            modelBuilder.Entity("NASRAC.Models.Game.JoinEntities.TeamManufacturers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamManufacturers");
                });

            modelBuilder.Entity("NASRAC.Models.Game.RaceEntities.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Laps")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Stages")
                        .HasColumnType("integer");

                    b.Property<int>("TrackId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.ToTable("Race");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Laps = 150,
                            Name = "Busch Light Clash at The Coliseum",
                            Stages = 0,
                            TrackId = 1,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Laps = 60,
                            Name = "Bluegreen Vacations Duel 1 at DAYTONA",
                            Stages = 2,
                            TrackId = 2,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Laps = 60,
                            Name = "Bluegreen Vacations Duel 2 at DAYTONA",
                            Stages = 2,
                            TrackId = 2,
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            Laps = 500,
                            Name = "Daytona 500",
                            Stages = 3,
                            TrackId = 2,
                            Type = 2
                        },
                        new
                        {
                            Id = 5,
                            Laps = 200,
                            Name = "Pale Casino 400",
                            Stages = 3,
                            TrackId = 3,
                            Type = 2
                        });
                });

            modelBuilder.Entity("NASRAC.Models.Game.RaceEntities.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Length")
                        .HasColumnType("double precision");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Track");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Length = 0.25,
                            Location = "Los Angeles, CA",
                            Name = "Los Angeles Memorial Coliseum",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Length = 2.5,
                            Location = "Daytona Beach, FL",
                            Name = "Daytona International Speedway",
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            Length = 2.0,
                            Location = "Fontana, CA",
                            Name = "Auto Club Speedway",
                            Type = 2
                        });
                });

            modelBuilder.Entity("NASRAC.Models.Game.Stats.QualifyingStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DriverId")
                        .HasColumnType("integer");

                    b.Property<double>("FastestTime")
                        .HasColumnType("double precision");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.Property<int>("RaceId")
                        .HasColumnType("integer");

                    b.Property<double>("TopSpeed")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("RaceId");

                    b.ToTable("QualifyingStats");
                });

            modelBuilder.Entity("NASRAC.Models.Game.Stats.RaceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("AveragePosition")
                        .HasColumnType("double precision");

                    b.Property<double>("AverageRunningPosition")
                        .HasColumnType("double precision");

                    b.Property<int>("CautionLapCount")
                        .HasColumnType("integer");

                    b.Property<double>("CautionLapPercentage")
                        .HasColumnType("double precision");

                    b.Property<int>("CautionsCaused")
                        .HasColumnType("integer");

                    b.Property<int>("CurrentPosition")
                        .HasColumnType("integer");

                    b.Property<double>("DNFOdds")
                        .HasColumnType("double precision");

                    b.Property<int>("DriverId")
                        .HasColumnType("integer");

                    b.Property<double>("DriverRating")
                        .HasColumnType("double precision");

                    b.Property<double>("FastestTime")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsRunning")
                        .HasColumnType("boolean");

                    b.Property<int>("LapLedCount")
                        .HasColumnType("integer");

                    b.Property<double>("LapLedPercentage")
                        .HasColumnType("double precision");

                    b.Property<int>("RaceId")
                        .HasColumnType("integer");

                    b.Property<int>("Top15LapCount")
                        .HasColumnType("integer");

                    b.Property<double>("Top15LapPercentage")
                        .HasColumnType("double precision");

                    b.Property<double>("TopSpeed")
                        .HasColumnType("double precision");

                    b.Property<int>("TotalLapCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("RaceId");

                    b.ToTable("RaceLog");
                });

            modelBuilder.Entity("NASRAC.Models.Game.Stats.SessionResults", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("AveragePosition")
                        .HasColumnType("double precision");

                    b.Property<double>("AverageRunningPosition")
                        .HasColumnType("double precision");

                    b.Property<int>("CautionLapCount")
                        .HasColumnType("integer");

                    b.Property<double>("CautionLapPercentage")
                        .HasColumnType("double precision");

                    b.Property<int>("CautionsCaused")
                        .HasColumnType("integer");

                    b.Property<int>("DNFPosition")
                        .HasColumnType("integer");

                    b.Property<int>("DriverId")
                        .HasColumnType("integer");

                    b.Property<double>("FastestTime")
                        .HasColumnType("double precision");

                    b.Property<int>("FinishPosition")
                        .HasColumnType("integer");

                    b.Property<int>("HighestPosition")
                        .HasColumnType("integer");

                    b.Property<int>("LapLedCount")
                        .HasColumnType("integer");

                    b.Property<double>("LapLedPercentage")
                        .HasColumnType("double precision");

                    b.Property<int>("LowestPosition")
                        .HasColumnType("integer");

                    b.Property<int>("RaceId")
                        .HasColumnType("integer");

                    b.Property<int>("SessionType")
                        .HasColumnType("integer");

                    b.Property<int>("StartPosition")
                        .HasColumnType("integer");

                    b.Property<int>("Top15LapCount")
                        .HasColumnType("integer");

                    b.Property<double>("Top15LapPercentage")
                        .HasColumnType("double precision");

                    b.Property<double>("TopSpeed")
                        .HasColumnType("double precision");

                    b.Property<int>("TotalLapCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("RaceId");

                    b.ToTable("SessionResults");
                });

            modelBuilder.Entity("NASRAC.Models.Game.TeamEntities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("EquipmentRating")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("OverallRating")
                        .HasColumnType("double precision");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<double>("PerformanceRating")
                        .HasColumnType("double precision");

                    b.Property<double>("PersonnelRating")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("NASRAC.Models.Game.TeamEntities.TeamFinancials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Balance")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("StatementDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamFinancials");
                });

            modelBuilder.Entity("NASRAC.Models.WebApp.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("NASRAC.Models.WebApp.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("NASRAC.Models.WebApp.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NASRAC.Models.WebApp.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("NASRAC.Models.WebApp.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NASRAC.Models.Game.DriverEntities.Driver", b =>
                {
                    b.HasOne("NASRAC.Models.Game.TeamEntities.Team", "Team")
                        .WithMany("Drivers")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NASRAC.Models.Game.Entities.Car", b =>
                {
                    b.HasOne("NASRAC.Models.Game.Entities.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NASRAC.Models.Game.TeamEntities.Team", "Team")
                        .WithMany("Cars")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NASRAC.Models.Game.Entities.Loan", b =>
                {
                    b.HasOne("NASRAC.Models.Game.TeamEntities.Team", "Borrower")
                        .WithMany()
                        .HasForeignKey("BorrowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NASRAC.Models.Game.TeamEntities.Team", "Lender")
                        .WithMany()
                        .HasForeignKey("LenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Borrower");

                    b.Navigation("Lender");
                });

            modelBuilder.Entity("NASRAC.Models.Game.Entities.Schedule", b =>
                {
                    b.HasOne("NASRAC.Models.Game.RaceEntities.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Race");
                });

            modelBuilder.Entity("NASRAC.Models.Game.JoinEntities.TeamManufacturers", b =>
                {
                    b.HasOne("NASRAC.Models.Game.Entities.Manufacturer", "Manufacturer")
                        .WithMany("TeamManufacturers")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NASRAC.Models.Game.TeamEntities.Team", "Team")
                        .WithMany("TeamManufacturers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NASRAC.Models.Game.RaceEntities.Race", b =>
                {
                    b.HasOne("NASRAC.Models.Game.RaceEntities.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");
                });

            modelBuilder.Entity("NASRAC.Models.Game.Stats.QualifyingStats", b =>
                {
                    b.HasOne("NASRAC.Models.Game.DriverEntities.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NASRAC.Models.Game.RaceEntities.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("NASRAC.Models.Game.Stats.RaceLog", b =>
                {
                    b.HasOne("NASRAC.Models.Game.DriverEntities.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NASRAC.Models.Game.RaceEntities.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("NASRAC.Models.Game.Stats.SessionResults", b =>
                {
                    b.HasOne("NASRAC.Models.Game.DriverEntities.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NASRAC.Models.Game.RaceEntities.Race", "Race")
                        .WithMany()
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Race");
                });

            modelBuilder.Entity("NASRAC.Models.Game.TeamEntities.Team", b =>
                {
                    b.HasOne("NASRAC.Models.WebApp.Entities.AppUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("NASRAC.Models.Game.TeamEntities.TeamFinancials", b =>
                {
                    b.HasOne("NASRAC.Models.Game.TeamEntities.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NASRAC.Models.Game.Entities.Manufacturer", b =>
                {
                    b.Navigation("TeamManufacturers");
                });

            modelBuilder.Entity("NASRAC.Models.Game.TeamEntities.Team", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Drivers");

                    b.Navigation("TeamManufacturers");
                });
#pragma warning restore 612, 618
        }
    }
}
